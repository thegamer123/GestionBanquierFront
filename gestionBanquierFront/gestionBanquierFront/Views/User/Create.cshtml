@model gestionBanquierFront.Models.User

@{
    ViewBag.Title = "Create";
}



<head>


    @Scripts.Render("~/bundles/jqueryval")
</head>

<div id="layoutSidenav_content">
    <main>
        @* <div class="container-fluid px-4">*@

        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-table me-1"></i>
                Add  User
            </div>
            <div class="card-body">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Create User</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="form-group">
                        @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.prenom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.prenom, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.prenom, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    @*<div class="form-group">
                        @Html.LabelFor(model => model.accountIsInRedStated, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.accountIsInRedStated)
                                @Html.ValidationMessageFor(model => model.accountIsInRedStated, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.timesTheAccountReachNegativeSolde, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.timesTheAccountReachNegativeSolde, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.timesTheAccountReachNegativeSolde, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
                        </div>
                    </div>*@



                    <br />
                    <br />
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
                }


            </div>
        </div>
    </main>

</div>

